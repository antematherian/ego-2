#!/usr/bin/python3

import os, sys
import portage
import portage.repository.config
import json

# Get the list of active repositories from portage
# also, get the location of the main repo. The main repo
# is treated specially, and will be the one used by default
# when epro is launched without arguments. This means epro
# will behave in exactly the same way as it did before when one
# uses epro with a monolithic portage tree.
repo_config_object = portage.repository.config.load_repository_config(portage.settings)
lrepo_locations = list(repo_config_object.repoLocationList())
smain_repo_location = repo_config_object.mainRepoLocation()
#print (lrepo_locations)

#RESERVED KEYWORDS
# Due to the special CLI syntax we use to access the repository profiles, we're forced to
# reserve the following keywords. This will prevent epro from being confused.

lbanned_repo_names = [ "list", "show", "show-json", "get" ]

#Defines a dictionary of repositories 

drepos_with_profiles = {}
for repo_loc in lrepo_locations:
    if os.path.exists(repo_loc+"/profiles/profiles.ego.desc"):
        repo_name = repo_config_object.get_name_for_location(repo_loc)
        if repo_name in lbanned_repo_names:
            print("Skipping repository %s because it uses a reserved epro keyword", repo_name)
            print("Please change the repository name in profiles/repo_name if you want to use")
            print("this repository")
        else:
            drepos_with_profiles.update({repo_name : repo_loc})
smain_repo_name = ""
if os.path.exists(smain_repo_location+"/profiles/profiles.ego.desc"):
    smain_repo_name = repo_config_object.get_name_for_location(smain_repo_location)

print(drepos_with_profiles)
print(smain_repo_name)
